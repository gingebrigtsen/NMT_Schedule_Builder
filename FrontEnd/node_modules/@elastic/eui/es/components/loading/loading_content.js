/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
import React from 'react';
import PropTypes from "prop-types";
import { EuiSkeletonText } from '../skeleton';
/**
 * @deprecated Use `EuiSkeletonTextProps` instead
 */

import { jsx as ___EmotionJSX } from "@emotion/react";

/**
 * @deprecated Use `EuiSkeletonText` instead
 */
export var EuiLoadingContent = function EuiLoadingContent(props) {
  return ___EmotionJSX(EuiSkeletonText, props);
};
EuiLoadingContent.propTypes = {
  className: PropTypes.string,
  "aria-label": PropTypes.string,
  "data-test-subj": PropTypes.string,
  css: PropTypes.any,

  /**
     * When true, shows the loading skeleton component.
     * When false, shows any `children` and announces to screen readers that your content has loaded.
     */
  isLoading: PropTypes.bool,

  /**
     * Label your loading sections to provide more helpful context to screen readers.
     * For example, pass "API keys" to have screen readers read "Loading API keys" and "Loaded API keys".
     */
  contentAriaLabel: PropTypes.string,

  /**
     * Any optional props to pass to the `aria-busy` wrapper around the skeleton content
     */
  ariaWrapperProps: PropTypes.any,

  /**
       * Number of lines to display (between 1 to 10)
       */
  lines: PropTypes.any,

  /**
       * EuiText size to render
       */
  size: PropTypes.any
};