function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
/// <reference types="../../../cypress/support"/>
import React, { useState } from 'react';
import { EuiButtonEmpty } from '../button';
import { EuiCard } from './card';
import { EuiIcon } from '../icon';
import { EuiFlexGroup, EuiFlexItem } from '../flex';
import { jsx as ___EmotionJSX } from "@emotion/react";

var Card = function Card() {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      card1Selected = _useState2[0],
      setCard1 = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      card2Selected = _useState4[0],
      setCard2 = _useState4[1];

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      card3Selected = _useState6[0],
      setCard3 = _useState6[1];

  var card1Clicked = function card1Clicked() {
    setCard1(!card1Selected);
  };

  var card2Clicked = function card2Clicked() {
    setCard2(!card2Selected);
  };

  var card3Clicked = function card3Clicked() {
    setCard3(!card3Selected);
  };

  var detailsClicked = function detailsClicked(e) {
    e.stopPropagation();
  };

  return ___EmotionJSX(EuiFlexGroup, {
    gutterSize: "l"
  }, ___EmotionJSX(EuiFlexItem, null, ___EmotionJSX(EuiCard, {
    icon: ___EmotionJSX(EuiIcon, {
      size: "xxl",
      type: "logoSketch"
    }),
    title: "Sketch",
    description: "Example of a short card description.",
    footer: ___EmotionJSX(EuiButtonEmpty, {
      iconType: "iInCircle",
      size: "xs",
      onClick: detailsClicked,
      "aria-label": "See more details about Sketch"
    }, "More details"),
    selectable: {
      onClick: card1Clicked,
      isSelected: card1Selected
    }
  })), ___EmotionJSX(EuiFlexItem, null, ___EmotionJSX(EuiCard, {
    icon: ___EmotionJSX(EuiIcon, {
      size: "xxl",
      type: "logoGCP"
    }),
    title: "Google",
    description: "Example of a longer card description. See how the footers stay lined up.",
    footer: ___EmotionJSX(EuiButtonEmpty, {
      iconType: "iInCircle",
      size: "xs",
      onClick: detailsClicked,
      "aria-label": "See more details about Google"
    }, "More details"),
    selectable: {
      onClick: card2Clicked,
      isSelected: card2Selected
    }
  })), ___EmotionJSX(EuiFlexItem, null, ___EmotionJSX(EuiCard, {
    icon: ___EmotionJSX(EuiIcon, {
      size: "xxl",
      type: "logoAerospike"
    }),
    title: "Not Adobe",
    description: "Example of a short card description.",
    footer: ___EmotionJSX(EuiButtonEmpty, {
      iconType: "iInCircle",
      size: "xs",
      onClick: detailsClicked,
      "aria-label": "See more details about Not Adobe"
    }, "More details"),
    selectable: {
      onClick: card3Clicked,
      isSelected: card3Selected
    }
  })));
};

beforeEach(function () {
  cy.viewport(1024, 768); // medium breakpoint

  cy.realMount(___EmotionJSX(Card, null));
});
describe('EuiCard', function () {
  describe('Automated accessibility check', function () {
    it('has zero violations on first render', function () {
      cy.checkAxe();
    });
    it('has zero violations after clicking buttons', function () {
      cy.get('button[aria-checked="false"]').each(function ($el) {
        cy.wrap($el).click();
      });
      cy.checkAxe();
    });
    it('has zero violations after keyboard interaction', function () {
      cy.repeatRealPress('Tab');
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'true');
      cy.repeatRealPress('Tab');
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'true');
      cy.repeatRealPress('Tab');
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'true');
      cy.checkAxe();
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'false');
      cy.repeatRealPress(['Shift', 'Tab']);
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'false');
      cy.repeatRealPress(['Shift', 'Tab']);
      cy.realPress('Enter');
      cy.focused().should('have.attr', 'aria-checked', 'false');
      cy.checkAxe();
    });
  });
});